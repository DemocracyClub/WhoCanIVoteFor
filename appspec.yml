# This is an appspec.yml template file for use with an EC2/On-Premises deployment in CodeDeploy.
# The lines in this template starting with the hashtag symbol are
#   instructional comments and can be safely left in the file or
#   ignored.
# For help completing this file, see the "AppSpec File Reference" in the
#   "CodeDeploy User Guide" at
#   https://docs.aws.amazon.com/codedeploy/latest/userguide/app-spec-ref.html
version: 0.0
os: linux
# During the Install deployment lifecycle event (which occurs between the
#   BeforeInstall and AfterInstall events), copy the specified files
#   in "source" starting from the root of the revision's file bundle
#   to "destination" on the Amazon EC2 instance.
# Specify multiple "source" and "destination" pairs if you want to copy
#   from multiple sources or to multiple destinations.
# If you are not copying any files to the Amazon EC2 instance, then remove the
#   "files" section altogether. A blank or incomplete "files" section
#   may cause associated deployments to fail.
files:
  - source: /
    destination: /var/www/wcivf/code/
# For deployments to Amazon Linux, Ubuntu Server, or RHEL instances,
#   you can specify a "permissions"
#   section here that describes special permissions to apply to the files
#   in the "files" section as they are being copied over to
#   the Amazon EC2 instance.
#   For more information, see the documentation.
# If you are deploying to Windows Server instances,
#   then remove the
#   "permissions" section altogether. A blank or incomplete "permissions"
#   section may cause associated deployments to fail.
permissions:
  - object: /var/www/wcivf/code/
    pattern: "**"
    owner: wcivf
    group: wcivf
# If you are not running any commands on the Amazon EC2 instance, then remove
#   the "hooks" section altogether. A blank or incomplete "hooks" section
#   may cause associated deployments to fail.
hooks:

  BeforeInstall:
    - location: deploy/before_install/initial_setup.sh
      timeout: 300
      runas: root
# During the AfterInstall deployment lifecycle event, run the commands
#   in the script specified in "location".
  AfterInstall:
    - location: deploy/after_install/install_python_deps.sh
      timeout: 300
      runas: wcivf
    - location: deploy/after_install/write_envfile.py
      timeout: 300
      runas: wcivf
    - location: deploy/after_install/system_files.sh
      timeout: 300
      runas: root
    - location: deploy/after_install/migrate_logger.sh
      timeout: 300
      runas: wcivf
    - location: deploy/after_install/collectstatic.sh
      timeout: 300
      runas: wcivf
    - location: deploy/after_install/compilemessages.sh
      timeout: 300
      runas: wcivf
    - location: deploy/after_install/install_crontab.sh
      timeout: 300
      runas: root
# During the ApplicationStart deployment lifecycle event, run the commands
#   in the script specified in "location".
  ApplicationStart:
    - location: deploy/start_application.sh
      timeout: 1200
      runas: root
  AfterBlockTraffic:
    - location: deploy/files/scripts/remove_db_replication.sh
      timeout: 300
      runas: wcivf
# During the ValidateService deployment lifecycle event, run the commands
#   in the script specified in "location".
  ValidateService:
    - location: deploy/validate_application.sh
      timeout: 300
      runas: root
  #   - location:
  #     timeout:
  #     runas:
