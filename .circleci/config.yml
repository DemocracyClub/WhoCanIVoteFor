# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
jobs:
  build_and_test:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6-jessie-node
        environment:
          CIRCLECI: true
          PGHOST: 127.0.0.1
      - image: circleci/postgres:10-alpine-ram
        environment:
          POSTGRES_USER: wcivf
          POSTGRES_DB: wcivf
      - image: circleci/redis:3.2.12-alpine
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v4-dependencies-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/testing.txt" }}
      - run:
          name: install Tox
          command: |
            python3 -m venv .venv
            . .venv/bin/activate
            pip install tox coveralls
      - run:
          name: install dependencies
          command: |
            python3 -m venv .venv
            . .venv/bin/activate
            pip install -r requirements.txt
            tox --notest --workdir /home/circleci/repo/.tox/
      - save_cache:
          paths:
            - ./.venv
            - /home/circleci/repo/.tox/
          key: v4-dependencies-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/testing.txt" }}

      - run:
          name: Install HTML Tidy
          command: wget https://github.com/htacg/tidy-html5/releases/download/5.8.0/tidy-5.8.0-Linux-64bit.deb && sudo dpkg -i tidy-5.8.0-Linux-64bit.deb
      
      # run tests!
      - run:
          name: run tests
          command: |
            python3 -m venv .venv
            . .venv/bin/activate
            tox --workdir /home/circleci/repo/.tox/
      - run:
          name: Update Coveralls
          command: |
            . .venv/bin/activate
            coveralls
      - store_artifacts:
          path: test-reports
          destination: test-reports

  sam_build:
    docker:
      - image: amazon/aws-sam-cli-build-image-python3.6:latest
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: sam build
          command: |
            pip install --upgrade pip aws-sam-cli
            make build clean
      - persist_to_workspace:
          root: ~/repo/
          paths: [ .aws-sam/build/ ]

  sam_deploy:
    docker:
      - image: circleci/python:3.6-jessie-node
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/
      - run:
          name: install sam-cli
          command: |
            python3 -m venv .venv
            . .venv/bin/activate
            pip install --upgrade pip aws-sam-cli
      - run: printenv AWS_ACCESS_KEY_ID | md5sum
      - run: printenv AWS_SECRET_ACCESS_KEY | md5sum
      - run: printenv DB_HOST
      - run:
          name: deploy
          command: |
            . .venv/bin/activate
            sam deploy \
                --no-confirm-changeset \
                --config-file ~/repo/samconfig.toml \
                --template-file ~/repo/.aws-sam/build/template.yaml \
                --parameter-overrides " \
                   AppDjangoSettingsModule=wcivf.settings \
                   AppDBHost='$DB_HOST' \
                   AppDBPassword='$DB_PASSWORD' \
                  "


workflows:
  main:
    jobs:
      - build_and_test
      - sam_build:
          requires:
          - build_and_test
      - sam_deploy:
          requires:
          - build_and_test
          - sam_build
          context: [ deployment-lambda-wcivf ]
